% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/occmap.R
\name{occmap}
\alias{occmap}
\title{Map species occurrences}
\usage{
occmap(
  locs,
  ras = NULL,
  bg = "ggmap",
  proj = "+init=epsg:4326",
  pcol = "red",
  alpha = 1,
  psize = 1,
  add = FALSE,
  leaflet.base = NULL,
  mapmisc_server = "maptoolkit",
  filename = "occmap.kmz",
  ...
)
}
\arguments{
\item{locs}{A matrix, dataframe, SpatialPoints or SpatialPointsDataFrame containing coordinates of species occurrences. If locs is a matrix or dataframe, it will be converted to a spatial object using \code{\link[=locs2sp]{locs2sp()}}.}

\item{ras}{Raster* object to be used as background for points. Default is NULL, in which case a background map defined by \code{bg} will be used.}

\item{bg}{Type of background map. Either
'google' for Google maps background (using \code{\link[dismo:gmap]{dismo::gmap()}}) (note this requires a Google API key - currently not working!),
'coast' for coastlines (using \code{coastsCoarse} from \pkg{rworldmap} package),
'ggmap' for maps provided by \code{\link[ggmap:get_map]{ggmap::get_map()}} in \pkg{ggmap} package,
'leaflet' for an interactive HTML map using \pkg{leaflet},
'mapmisc' for using any of the layers available in \pkg{mapmisc} package, or
'kml' for producing a KMZ file to be opened with Google Earth.}

\item{proj}{Character string specifying the projection of coordinates data (see \code{\link[sp:is.projected]{sp::proj4string()}} or \url{http://spatialreference.org}). Default is geographic (unprojected) coordinates, datum WGS84. Not used if locs is already an Spatial object with defined projection.}

\item{pcol}{Colour to be used for points. Default is "red".}

\item{alpha}{Colour transparency for points, between 0 (fully transparent) and 1 (fully opaque).}

\item{psize}{Point size. Default is 1 (cex = 1).}

\item{add}{Logical. Add these occurrences to a previous map? (e.g. for a new species). Default is FALSE. Note this feature doesn't work for all map types. For leaflet maps, when add = TRUE, a leaflet basemap (e.g. as produced by a previous call to occmap) must be provided (see \code{leaflet.base}).}

\item{leaflet.base}{Leaflet map to be used as basemap to add further points when add is TRUE.}

\item{mapmisc_server}{character. Server/type of background map to be used when bg = "mapmisc". Run \code{\link[mapmisc:openmap]{mapmisc::osmTiles()}} to see all the available layers.}

\item{filename}{Character. Path and filename of the KMZ file produced when bg = "kml".}

\item{...}{additional parameters to be passed to
dismo::gmap if bg == 'google'
plot if bg == 'coast'
ggmap::get_map if bg == 'ggmap'
leafletR::leaflet if bg == 'leaflet'
raster::plot or raster::plotRGB if bg == 'mapmisc'
See these functions help files for details.}
}
\value{
A map (plot), unless \code{bg = 'KML'} in which case a kmz file is saved to be explored with Google Earth. In some cases, a raster layer, leaflet object, or ggplot object is returned in addition to the map.
}
\description{
Plot map of species occurrences (or any set of georeferenced points) on top of different background layers.
}
\details{
If using ggmap and stamen maps, large regions seem to give problems.
}
\examples{
\dontrun{
# Using acaule dataset from dismo package:
library(dismo)
data(acaule)

occmap(locs = acaule)  # If 'ras' not provided, default is bg = "ggmap"
occmap(acaule, bg = "coast")  # just coastlines as background map
occmap(acaule, bg = "leaflet") # leaflet interactive map

# Watercolor map from Stamen using ggmap
# NB: use small regions, otherwise give error to download map tiles
locs_redux <- subset(acaule, lon > -80 & lon < -60 & lat > -30 & lat < -10)
occmap(locs = locs_redux, maptype = 'watercolor', source = 'stamen',
           pcol = "darkgreen", psize = 4)

# Plot occurrences in a specific country:
occmap(locs = subset(acaule, country=="Bolivia"), bg = "leaflet")
# (note there are georeferencing errors in the data)


# Add transparency to points
occmap(locs = acaule, pcol = "red", alpha = 0.5, bg = "coast")
occmap(locs = acaule, pcol = "red", alpha = 0.5, bg = "leaflet")


## Providing spatial objects ##
data(meuse)
coordinates(meuse) <- ~x+y
proj4string(meuse) <- CRS("+init=epsg:28992")
occmap(meuse)

#alternatively, provide projection argument:
data(meuse)
coordinates(meuse) <- ~x+y
occmap(meuse, proj = "+init=epsg:28992")
}
}
